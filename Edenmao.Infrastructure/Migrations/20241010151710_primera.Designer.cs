// <auto-generated />
using System;
using Edenmao.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Edenmao.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241010151710_primera")]
    partial class primera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Edenmao.Domain.Entities.Articulo", b =>
                {
                    b.Property<int>("IDArticulo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IDCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IDPersonificacion")
                        .HasColumnType("int");

                    b.Property<int>("IDcategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IDArticulo");

                    b.HasIndex("IDCategoria");

                    b.HasIndex("IDPersonificacion");

                    b.ToTable("Articulose");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("IDCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IDCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Clientes", b =>
                {
                    b.Property<int>("IDClientes")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IDClientes");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Clientess");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.DetallePedidos", b =>
                {
                    b.Property<int>("IDDetallePedido")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("IDPedido")
                        .HasColumnType("int");

                    b.Property<decimal>("Itbis")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IDDetallePedido");

                    b.HasIndex("IDPedido");

                    b.ToTable("DetallePedidoss");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.DetallePedidos_Articulos", b =>
                {
                    b.Property<int>("IDPedido")
                        .HasColumnType("int");

                    b.Property<int>("IDArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IDDetalleArticulo")
                        .HasColumnType("int");

                    b.HasKey("IDPedido", "IDArticulo");

                    b.HasIndex("IDArticulo");

                    b.ToTable("DetallePedidos_Articulos");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Pedidos", b =>
                {
                    b.Property<int>("IDPedidos")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaEmisión")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("TotalDescuento")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("TotalItbis")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IDPedidos");

                    b.HasIndex("IDCliente");

                    b.ToTable("Pedidoss");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Personificacion", b =>
                {
                    b.Property<int>("IDPersonificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPersonificacion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IDPersonificacion");

                    b.ToTable("Personificacions");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Roles", b =>
                {
                    b.Property<int>("IDRolUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDRolUsuario"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IDRolUsuario");

                    b.ToTable("Roless");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDRolUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IDUsuario");

                    b.HasIndex("IDRolUsuario");

                    b.ToTable("Usuarioss");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Articulo", b =>
                {
                    b.HasOne("Edenmao.Domain.Entities.Categoria", "IDCategoriaNav")
                        .WithMany("Articulos")
                        .HasForeignKey("IDCategoria");

                    b.HasOne("Edenmao.Domain.Entities.Personificacion", "IDPersonificacionNav")
                        .WithMany("Articulos")
                        .HasForeignKey("IDPersonificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDCategoriaNav");

                    b.Navigation("IDPersonificacionNav");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Clientes", b =>
                {
                    b.HasOne("Edenmao.Domain.Entities.Usuarios", "IDUsuarioNav")
                        .WithMany("Clientes")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDUsuarioNav");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.DetallePedidos", b =>
                {
                    b.HasOne("Edenmao.Domain.Entities.Pedidos", "IDPedidoNav")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IDPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDPedidoNav");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.DetallePedidos_Articulos", b =>
                {
                    b.HasOne("Edenmao.Domain.Entities.Articulo", "IDArticuloNav")
                        .WithMany("DetallePedido_Articulo")
                        .HasForeignKey("IDArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edenmao.Domain.Entities.Pedidos", "IDPedidoNav")
                        .WithMany()
                        .HasForeignKey("IDPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDArticuloNav");

                    b.Navigation("IDPedidoNav");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Pedidos", b =>
                {
                    b.HasOne("Edenmao.Domain.Entities.Clientes", "IDClienteNav")
                        .WithMany("Pedidos")
                        .HasForeignKey("IDCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDClienteNav");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Usuarios", b =>
                {
                    b.HasOne("Edenmao.Domain.Entities.Roles", "IDRolUsuarioNav")
                        .WithMany("Usuarios")
                        .HasForeignKey("IDRolUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDRolUsuarioNav");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Articulo", b =>
                {
                    b.Navigation("DetallePedido_Articulo");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Clientes", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Pedidos", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Personificacion", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Roles", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Edenmao.Domain.Entities.Usuarios", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
